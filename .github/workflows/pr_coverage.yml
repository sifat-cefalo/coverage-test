name: Test and Coverage for Changed Files

on:
  pull_request:
    paths:
      - '**/*.py'  # Monitor Python files for changes
    branches:
      - main       # Run only for PRs targeting the main branch

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify your Python version

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Identify changed files
        id: changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          # Get the list of changed Python files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} -- '*.py' ':!tests/*.py' | tr '\n' ',')
          CHANGED_FILES=${CHANGED_FILES%,}

          echo "$CHANGED_FILES"
          echo "::set-output name=changed_files::$CHANGED_FILES"

      - name: Run tests and collect coverage
        run: |
          coverage run -m pytest
        continue-on-error: true

      - name: Filter coverage for changed files and generate XML
        run: |
          CHANGED_FILES="${{ steps.changed_files.outputs.changed_files }}"
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changed Python files, skipping coverage report."
            exit 0
          fi

          echo "Running coverage report for changed files:"
          echo "$CHANGED_FILES"
          
          # Generate coverage report for changed files
          coverage report --include="${{ CHANGED_FILES }}" > coverage.txt
        continue-on-error: true
      
      - name: Post coverage report to PR
        if: steps.changed_files.outputs.changed_files != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: Coverage Report for Changed Files
          message: |
            ```
            $(cat coverage.txt)
            ```
