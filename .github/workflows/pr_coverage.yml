name: Test and Coverage for Changed Files

on:
  pull_request:
    paths:
      - '**/*.py'  # Monitor Python files for changes
    branches:
      - main       # Run only for PRs targeting the main branch
permissions:
  pull-requests: write

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify your Python version

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Identify changed files
        id: changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          # Get the list of changed Python files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} -- '*.py' ':!tests/*.py' | tr '\n' ',')
          CHANGED_FILES=${CHANGED_FILES%,}

          echo "$CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV  # Set as environment variable

      - name: Run tests and collect coverage
        run: |
          coverage run -m pytest

      - name: Filter coverage for changed files and generate text report
        run: |
          if [ -z "${{ env.CHANGED_FILES }}" ]; then
            echo "No changed Python files, skipping coverage report."
            exit 0
          fi

          echo "Running coverage report for changed files:"
          echo "${{ env.CHANGED_FILES }}"
          
          # Generate coverage report for changed files
          OUTPUT=$(coverage lcov -i --include="${{ env.CHANGED_FILES }}" -o coverage_report.lcov)
          
          if echo "$OUTPUT" | grep -q "No data to report."; then
              echo "Coverage report indicates no data to report."
              exit 0  # Exit with status 0
          else
              echo "$OUTPUT"  # Print the output if coverage data exists
          fi

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: coverage_report.lcov
